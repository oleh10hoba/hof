{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oleh_\\\\Documents\\\\in\\u017Cynierka\\\\hof\\\\client\\\\src\\\\components\\\\App.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Menu from '../containers/Menu';\nimport Pay from '../containers/Pay';\nimport { Card, Container } from 'semantic-ui-react';\nimport ProductCard from '../containers/ProductCard';\nimport Filter from '../containers/Filter';\nimport Login from '../components/Login';\nimport Account from './Account';\nimport Contact from './Contact';\nimport Registration from './Registration';\nimport ShopCart from '../containers/ShopCart';\nimport Admin from './Admin';\nimport { login } from '../actions/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  componentWillMount() {\n    const {\n      setProducts,\n      setFavorites,\n      setAccount,\n      setShops\n    } = this.props;\n    axios.post('http://localhost:3001/getfavorites', {\n      id: localStorage.getItem(\"id\")\n    }).then(({\n      data\n    }) => {\n      setFavorites(data);\n    });\n    axios.get('http://localhost:3001/getproducts').then(({\n      data\n    }) => {\n      setProducts(data);\n    });\n    axios.get('http://localhost:3001/getaccount').then(({\n      data\n    }) => {\n      setAccount(data);\n    });\n    axios.get('http://localhost:3001/getshops').then(({\n      data\n    }) => {\n      setShops(data);\n    });\n  }\n\n  render() {\n    const {\n      products,\n      favorites,\n      account,\n      shops,\n      isReady,\n      isLogged\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        className: \"Router\",\n        children: [/*#__PURE__*/_jsxDEV(Menu, {\n          isLogged: isLogged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/shopcart\",\n          children: isLogged ? !isReady ? 'Loading...' : /*#__PURE__*/_jsxDEV(ShopCart, {\n            shop: shops\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(Login, {\n            isLogged: isLogged\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/pay\",\n          children: isLogged ? /*#__PURE__*/_jsxDEV(Pay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Login, {\n            isLogged: isLogged\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin\",\n          children: [isLogged ? !isReady ? 'Loading...' : /*#__PURE__*/_jsxDEV(Admin, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Login, {\n            isLogged: isLogged\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), !isReady ? 'Loading...' : shops.map((shop, i) => /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: shop.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/registration\",\n          children: isLogged ? /*#__PURE__*/_jsxDEV(Container, {\n            children: [/*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n              itemsPerRow: 8,\n              children: !isReady ? 'Loading...' : products.map((product, i) => /*#__PURE__*/_jsxDEV(ProductCard, { ...product\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Registration, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/favorite\",\n          children: isLogged ? /*#__PURE__*/_jsxDEV(Container, {\n            children: [/*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n              itemsPerRow: 8,\n              children: !isReady ? 'Loading...' : favorites.map((product, i) => /*#__PURE__*/_jsxDEV(ProductCard, { ...product\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Login, {\n            isLogged: isLogged\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/account\",\n          children: isLogged ? !isReady ? 'Loading...' : account.map((product, i) => /*#__PURE__*/_jsxDEV(Account, { ...product\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(Login, {\n            isLogged: isLogged\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/contact\",\n          children: [/*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), console.log(\"SHOPS: \", shops)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          children: !isLogged ? /*#__PURE__*/_jsxDEV(Login, {\n            isLogged: isLogged\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(Container, {\n            children: [/*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n              itemsPerRow: 8,\n              children: !isReady ? 'Loading...' : products.map((product, i) => /*#__PURE__*/_jsxDEV(ProductCard, { ...product\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/shop\",\n          children: isLogged ? /*#__PURE__*/_jsxDEV(Container, {\n            children: [/*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n              itemsPerRow: 8,\n              children: !isReady ? 'Loading...' : products.map((product, i) => /*#__PURE__*/_jsxDEV(ProductCard, { ...product\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"HOF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Login, {\n            isLogged: isLogged\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/oleh_/Documents/inżynierka/hof/client/src/components/App.jsx"],"names":["React","Component","axios","BrowserRouter","Router","Route","Menu","Pay","Card","Container","ProductCard","Filter","Login","Account","Contact","Registration","ShopCart","Admin","login","App","componentWillMount","setProducts","setFavorites","setAccount","setShops","props","post","id","localStorage","getItem","then","data","get","render","products","favorites","account","shops","isReady","isLogged","map","shop","i","address","product","console","log"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\r\nimport Menu from '../containers/Menu';\r\nimport Pay from '../containers/Pay';\r\nimport { Card, Container } from 'semantic-ui-react';\r\nimport ProductCard from '../containers/ProductCard';\r\nimport Filter from '../containers/Filter';\r\nimport Login from '../components/Login'\r\nimport Account from './Account';\r\nimport Contact from './Contact';\r\nimport Registration from './Registration';\r\nimport ShopCart from '../containers/ShopCart';\r\nimport Admin from './Admin'\r\nimport { login } from '../actions/auth';\r\n\r\nclass App extends Component{\r\n  componentWillMount(){ \r\n    const { setProducts, setFavorites, setAccount, setShops } = this.props;\r\n    \r\n    axios.post('http://localhost:3001/getfavorites', {id : localStorage.getItem(\"id\")}).then(({ data }) => {\r\n      setFavorites(data);\r\n    });\r\n    axios.get('http://localhost:3001/getproducts').then(({ data }) => {\r\n      setProducts(data);\r\n    });\r\n    \r\n    axios.get('http://localhost:3001/getaccount').then(({ data }) => {\r\n      setAccount(data);\r\n    });\r\n    axios.get('http://localhost:3001/getshops').then(({ data }) => {\r\n      setShops(data);\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    const { products, favorites, account, shops, isReady, isLogged } = this.props;\r\n    return (\r\n      <div >\r\n        <Router className=\"Router\">\r\n          <Menu isLogged={isLogged}/>\r\n            <Route path=\"/shopcart\"> \r\n              {isLogged \r\n                ? \r\n                !isReady \r\n                ? 'Loading...':\r\n                  <ShopCart shop={shops}/>\r\n                :\r\n                  <Login isLogged={isLogged}/>\r\n              }\r\n            </Route>\r\n          <Route path=\"/pay\">\r\n            {isLogged \r\n              ? \r\n                <Pay />\r\n              :\r\n                <Login isLogged={isLogged}/>\r\n            }\r\n          </Route>\r\n          <Route path=\"/admin\">\r\n            {isLogged ?\r\n            !isReady \r\n              ? 'Loading...':\r\n              <Admin />\r\n              :\r\n              <Login isLogged={isLogged}/>\r\n            }\r\n            {!isReady \r\n              ? 'Loading...': shops.map((shop, i) =>\r\n                        <h2>{shop.address}</h2>\r\n                    )}\r\n          </Route>\r\n          <Route path=\"/registration\">\r\n            {isLogged \r\n              ?\r\n                <Container>\r\n                  <Filter />\r\n                  <Card.Group itemsPerRow={8}>\r\n                    {!isReady\r\n                      ? 'Loading...'\r\n                      : products.map((product, i) =>\r\n                        <ProductCard key={i} {...product}/>\r\n                      )\r\n                    }\r\n                  </Card.Group>\r\n                </Container>\r\n              :\r\n                <Registration />\r\n          }\r\n          </Route>\r\n          <Route path=\"/favorite\" >\r\n            {isLogged ?\r\n              <Container>\r\n                  <Filter />\r\n                  <Card.Group itemsPerRow={8}>\r\n                    {!isReady\r\n                      ? 'Loading...'\r\n                      : \r\n                      favorites.map((product, i) =>\r\n                        <ProductCard key={i} {...product}/>\r\n                      )\r\n                    }\r\n                  </Card.Group>\r\n                </Container>\r\n                :\r\n                <Login isLogged={isLogged}/>\r\n            }\r\n          </Route>\r\n          <Route path=\"/account\">\r\n            {isLogged \r\n              ? \r\n                !isReady\r\n                  ? 'Loading...'\r\n                  :  account.map((product, i) => \r\n                  <Account key={i} {...product}/>\r\n                )\r\n              :\r\n                <Login isLogged={isLogged}/>\r\n            }\r\n          </Route>\r\n          <Route path=\"/contact\">\r\n            <Contact/>\r\n            {/* {shops.map((product, i) => \r\n                  <h1>{product.address}</h1>)} */}\r\n                  {/* <h1>{shops.length}</h1> */}\r\n                    {console.log(\"SHOPS: \",shops)}\r\n          </Route>\r\n          <Route path=\"/login\">\r\n          {!isLogged ?\r\n            <Login isLogged={isLogged}/> \r\n            :\r\n              <Container>\r\n                <Filter />\r\n                <Card.Group itemsPerRow={8}>\r\n                  {!isReady\r\n                    ? 'Loading...'\r\n                    : products.map((product, i) =>\r\n                      <ProductCard key={i} {...product}/>\r\n                    )\r\n                  }\r\n                </Card.Group>\r\n              </Container>\r\n            }\r\n          </Route>  \r\n          <Route path=\"/shop\">\r\n            {isLogged ?\r\n              <Container>\r\n                <Filter />\r\n                <Card.Group itemsPerRow={8}>\r\n                  {!isReady\r\n                    ? 'Loading...'\r\n                    : products.map((product, i) =>\r\n                      <ProductCard key={i} {...product}/>\r\n                    )\r\n                  }\r\n                </Card.Group>\r\n                <h1>HOF</h1>\r\n              </Container>\r\n              :\r\n              <Login isLogged={isLogged}/>\r\n            }\r\n          </Route>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}