{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oleh_\\\\Documents\\\\in\\u017Cynierka\\\\hof\\\\client\\\\src\\\\components\\\\App.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Menu from '../containers/Menu';\nimport Pay from '../containers/Pay';\nimport { Card, Container } from 'semantic-ui-react';\nimport ProductCard from '../containers/ProductCard';\nimport Filter from '../containers/Filter';\nimport Login from '../components/Login';\nimport Account from './Account';\nimport Contact from './Contact';\nimport Registration from './Registration';\nimport ShopCart from '../containers/ShopCart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLogChange = () => {};\n  }\n\n  componentWillMount() {\n    const {\n      setProducts,\n      setFavorites,\n      setAccount\n    } = this.props; // axios.get('/favorites.json').then(({ data }) => {\n    //   setFavorites(data);\n    // });\n    // const testData = require('../favorites.json');\n    // setFavorites(testData);\n\n    axios.post('http://localhost:3001/getfavorites', {\n      id: localStorage.getItem(\"id\")\n    }).then(({\n      data\n    }) => {\n      setFavorites(data);\n    });\n    axios.get('http://localhost:3001/getproducts').then(({\n      data\n    }) => {\n      setProducts(data);\n    });\n    axios.get('http://localhost:3001/getaccount').then(({\n      data\n    }) => {\n      setAccount(data);\n    });\n  } // componentDidMount() {\n  //   const handle = this.props.match.params;\n  //   const { total } = this.props.location.state \n  // }\n\n\n  render() {\n    const {\n      products,\n      favorites,\n      account,\n      isReady,\n      isLogged\n    } = this.props; // const { handle } = this.props.match.params\n    // const { totalValue } = this.props.location.state;\n    //   function Profile () {\n    //     const location = useLocation()\n    //     const { from } = location.state\n    //     // return (\n    //     //   ...\n    //     // )\n    //  }\n    // const handle = this.props.match.params;\n    // //   const { total } = this.props.location.state \n    // var isLog = this.div;\n    // this.props.logg(isLog);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [console.log(\"IsLogged: \", isLogged), /*#__PURE__*/_jsxDEV(Router, {\n        className: \"Router\",\n        children: [console.log(), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/shopcart\",\n          children: /*#__PURE__*/_jsxDEV(ShopCart, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/pay\",\n          children: /*#__PURE__*/_jsxDEV(Pay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/registration\",\n          children: /*#__PURE__*/_jsxDEV(Registration, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/favorite\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: [/*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n              itemsPerRow: 8,\n              children: !isReady ? 'Loading...' : favorites.map((product, i) => /*#__PURE__*/_jsxDEV(ProductCard, { ...product\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/account\",\n          children: !isReady ? 'Loading...' : account.map((product, i) => /*#__PURE__*/_jsxDEV(Account, { ...product\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/contact\",\n          children: isLogged && /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            isLogged: isLogged\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/shop\",\n          children: isLogged ? /*#__PURE__*/_jsxDEV(Container, {\n            children: [/*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n              itemsPerRow: 8,\n              children: [console.log(\"Products je:\", products), !isReady ? 'Loading...' : products.map((product, i) => /*#__PURE__*/_jsxDEV(ProductCard, { ...product\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"HOF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Login, {\n            isLogged: isLogged\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/oleh_/Documents/in≈ºynierka/hof/client/src/components/App.jsx"],"names":["React","Component","axios","BrowserRouter","Router","Route","Menu","Pay","Card","Container","ProductCard","Filter","Login","Account","Contact","Registration","ShopCart","App","handleLogChange","componentWillMount","setProducts","setFavorites","setAccount","props","post","id","localStorage","getItem","then","data","get","render","products","favorites","account","isReady","isLogged","console","log","map","product","i"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,KAAjC,QAA6C,kBAA7C;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,mBAAhC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAGA,MAAMC,GAAN,SAAkBhB,SAAlB,CAA2B;AAAA;AAAA;;AAAA,SAsBzBiB,eAtByB,GAsBT,MAAI,CAEnB,CAxBwB;AAAA;;AACzBC,EAAAA,kBAAkB,GAAE;AAClB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA,YAAf;AAA6BC,MAAAA;AAA7B,QAA4C,KAAKC,KAAvD,CADkB,CAElB;AACA;AACA;AACA;AACA;;AACArB,IAAAA,KAAK,CAACsB,IAAN,CAAW,oCAAX,EAAiD;AAACC,MAAAA,EAAE,EAAGC,YAAY,CAACC,OAAb,CAAqB,IAArB;AAAN,KAAjD,EAAoFC,IAApF,CAAyF,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AACrGR,MAAAA,YAAY,CAACQ,IAAD,CAAZ;AACD,KAFD;AAGA3B,IAAAA,KAAK,CAAC4B,GAAN,CAAU,mCAAV,EAA+CF,IAA/C,CAAoD,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAChET,MAAAA,WAAW,CAACS,IAAD,CAAX;AACD,KAFD;AAGA3B,IAAAA,KAAK,CAAC4B,GAAN,CAAU,kCAAV,EAA8CF,IAA9C,CAAmD,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAC/DP,MAAAA,UAAU,CAACO,IAAD,CAAV;AACD,KAFD;AAGD,GAjBwB,CAkBzB;AACA;AACA;AACA;;;AAKAE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,SAAZ;AAAuBC,MAAAA,OAAvB;AAAgCC,MAAAA,OAAhC;AAAyCC,MAAAA;AAAzC,QAAsD,KAAKb,KAAjE,CADO,CAEP;AACA;AACF;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,wBACE;AAAA,iBACGc,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,QAA1B,CADH,eAEE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAAA,mBACGC,OAAO,CAACC,GAAR,EADH,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,WAAZ;AAAA,iCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHF,eAME,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAA,iCACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF,eASE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,eAAZ;AAAA,iCACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBATF,eAYE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,WAAZ;AAAA,iCACE,QAAC,SAAD;AAAA,oCACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,WAAW,EAAE,CAAzB;AAAA,wBACG,CAACH,OAAD,GACG,YADH,GAGCF,SAAS,CAACM,GAAV,CAAc,CAACC,OAAD,EAAUC,CAAV,kBACZ,QAAC,WAAD,OAAyBD;AAAzB,iBAAkBC,CAAlB;AAAA;AAAA;AAAA;AAAA,sBADF;AAJJ;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAZF,eA0BE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAA,oBACG,CAACN,OAAD,GACG,YADH,GAEID,OAAO,CAACK,GAAR,CAAY,CAACC,OAAD,EAAUC,CAAV,kBACf,QAAC,OAAD,OAAqBD;AAArB,aAAcC,CAAd;AAAA;AAAA;AAAA;AAAA,kBADG;AAHP;AAAA;AAAA;AAAA;AAAA,gBA1BF,eAkCE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAA,oBACGL,QAAQ,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADf;AAAA;AAAA;AAAA;AAAA,gBAlCF,eAsCE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAA,iCACI,QAAC,KAAD;AAAO,YAAA,QAAQ,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAtCF,eAyCE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAA,oBACGA,QAAQ,gBACP,QAAC,SAAD;AAAA,oCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,WAAW,EAAE,CAAzB;AAAA,yBACCC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BN,QAA3B,CADD,EAEG,CAACG,OAAD,GACG,YADH,GAEGH,QAAQ,CAACO,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,kBACb,QAAC,WAAD,OAAyBD;AAAzB,iBAAkBC,CAAlB;AAAA;AAAA;AAAA;AAAA,sBADA,CAJN;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADO,gBAeP,QAAC,KAAD;AAAO,YAAA,QAAQ,EAAEL;AAAjB;AAAA;AAAA;AAAA;AAAA;AAhBJ;AAAA;AAAA;AAAA;AAAA,gBAzCF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkED;;AA5GwB;;AA8G3B,eAAenB,GAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\r\nimport Menu from '../containers/Menu';\r\nimport Pay from '../containers/Pay';\r\nimport { Card, Container } from 'semantic-ui-react';\r\nimport ProductCard from '../containers/ProductCard';\r\nimport Filter from '../containers/Filter';\r\nimport Login from '../components/Login'\r\nimport Account from './Account';\r\nimport Contact from './Contact';\r\nimport Registration from './Registration';\r\nimport ShopCart from '../containers/ShopCart';\r\n\r\n\r\nclass App extends Component{\r\n  componentWillMount(){ \r\n    const { setProducts, setFavorites, setAccount } = this.props;\r\n    // axios.get('/favorites.json').then(({ data }) => {\r\n    //   setFavorites(data);\r\n    // });\r\n    // const testData = require('../favorites.json');\r\n    // setFavorites(testData);\r\n    axios.post('http://localhost:3001/getfavorites', {id : localStorage.getItem(\"id\")}).then(({ data }) => {\r\n      setFavorites(data);\r\n    });\r\n    axios.get('http://localhost:3001/getproducts').then(({ data }) => {\r\n      setProducts(data);\r\n    });\r\n    axios.get('http://localhost:3001/getaccount').then(({ data }) => {\r\n      setAccount(data);\r\n    });\r\n  }\r\n  // componentDidMount() {\r\n  //   const handle = this.props.match.params;\r\n  //   const { total } = this.props.location.state \r\n  // }\r\n  handleLogChange=()=>{\r\n   \r\n  }\r\n  \r\n  render() {\r\n    const { products, favorites, account, isReady, isLogged } = this.props;\r\n    // const { handle } = this.props.match.params\r\n    // const { totalValue } = this.props.location.state;\r\n  //   function Profile () {\r\n  //     const location = useLocation()\r\n  //     const { from } = location.state\r\n   \r\n  //     // return (\r\n  //     //   ...\r\n  //     // )\r\n  //  }\r\n  // const handle = this.props.match.params;\r\n  // //   const { total } = this.props.location.state \r\n  // var isLog = this.div;\r\n  // this.props.logg(isLog);\r\n    return (\r\n      <div >\r\n        {console.log(\"IsLogged: \", isLogged)}\r\n        <Router className=\"Router\">\r\n          {console.log()}\r\n          <Menu/>\r\n          <Route path=\"/shopcart\">\r\n            <ShopCart/>\r\n          </Route>\r\n          <Route path=\"/pay\">\r\n            <Pay/>\r\n          </Route>\r\n          <Route path=\"/registration\">\r\n              <Registration />\r\n          </Route>\r\n          <Route path=\"/favorite\" >\r\n            <Container>\r\n                <Filter />\r\n                <Card.Group itemsPerRow={8}>\r\n                  {!isReady\r\n                    ? 'Loading...'\r\n                    : \r\n                    favorites.map((product, i) =>\r\n                      <ProductCard key={i} {...product}/>\r\n                    )\r\n                  }\r\n                </Card.Group>\r\n              </Container>\r\n          </Route>\r\n          <Route path=\"/account\">\r\n            {!isReady\r\n              ? 'Loading...'\r\n              :  account.map((product, i) => \r\n              <Account key={i} {...product}/>\r\n            )\r\n            }\r\n          </Route>\r\n          <Route path=\"/contact\">\r\n            {isLogged && <Contact/>}\r\n            {/* <Contact/> */}\r\n          </Route>\r\n          <Route path=\"/login\">\r\n              <Login isLogged={isLogged}/>\r\n          </Route>  \r\n          <Route path=\"/shop\">\r\n            {isLogged ?\r\n              <Container>\r\n                <Filter />\r\n                <Card.Group itemsPerRow={8}>\r\n                {console.log(\"Products je:\",products)}\r\n                  {!isReady\r\n                    ? 'Loading...'\r\n                    : products.map((product, i) =>\r\n                      <ProductCard key={i} {...product}/>\r\n                    )\r\n                  }\r\n                </Card.Group>\r\n                <h1>HOF</h1>\r\n              </Container>\r\n              :\r\n              <Login isLogged={isLogged}/>\r\n            }\r\n          </Route>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}